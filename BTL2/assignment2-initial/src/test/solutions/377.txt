Program([FuncDecl(Id(isPalindrome), [VarDecl(Id(s), ArrayType([100.0], StringType), None, None), VarDecl(Id(left), NumberType, None, None), VarDecl(Id(right), NumberType, None, None)], Block([If((BinaryOp(>, Id(left), BinaryOp(+, Id(right), NumLit(1.0))), Return(BooleanLit(False))), [], None), If((BinaryOp(or, BinaryOp(=, Id(left), Id(right)), BinaryOp(=, Id(left), BinaryOp(+, Id(right), NumLit(1.0)))), Return(BooleanLit(True))), [], None), Return(BinaryOp(and, BinaryOp(==, ArrayCell(Id(s), [Id(left)]), ArrayCell(Id(s), [Id(right)])), CallExpr(Id(isPalindrome), [Id(s), BinaryOp(+, Id(left), NumLit(1.0)), BinaryOp(-, Id(right), NumLit(1.0))])))])), FuncDecl(Id(main), [], Block([CallStmt(Id(isPalindrome), [ArrayLit(StringLit(m), StringLit(o), StringLit(m)), NumLit(0.0), NumLit(2.0)]), CallStmt(Id(isPalindrome), [ArrayLit(StringLit(d), StringLit(o), StringLit(g), StringLit(e), StringLit(e), StringLit(s), StringLit(e), StringLit(s), StringLit(e), StringLit(e), StringLit(g), StringLit(o), StringLit(d)), NumLit(0.0), NumLit(12.0)])]))])