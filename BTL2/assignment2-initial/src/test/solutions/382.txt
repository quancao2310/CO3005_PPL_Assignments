Program([FuncDecl(Id(printSolution), [VarDecl(Id(board), ArrayType([100.0, 100.0], NumberType), None, None), VarDecl(Id(n), NumberType, None, None)], Block([VarDecl(Id(i), None, var, NumLit(0.0)), VarDecl(Id(j), None, var, NumLit(0.0)), For(Id(i), BinaryOp(>=, Id(i), Id(n)), NumLit(1.0), Block([For(Id(j), BinaryOp(>=, Id(j), Id(n)), NumLit(1.0), If((ArrayCell(Id(board), [Id(i), Id(j)]), CallStmt(Id(writeString), [StringLit(Q )])), [], CallStmt(Id(writeString), [StringLit(. )]))), CallStmt(Id(printf), [StringLit(\n)])]))])), FuncDecl(Id(isSafe), [VarDecl(Id(board), ArrayType([100.0, 100.0], NumberType), None, None), VarDecl(Id(n), NumberType, None, None), VarDecl(Id(row), NumberType, None, None), VarDecl(Id(col), NumberType, None, None)], Block([VarDecl(Id(i), None, var, NumLit(0.0)), VarDecl(Id(j), None, var, NumLit(0.0)), For(Id(i), BinaryOp(>=, Id(i), Id(col)), NumLit(1.0), If((ArrayCell(Id(board), [Id(row), Id(i)]), Return(BooleanLit(False))), [], None)), AssignStmt(Id(i), Id(row)), AssignStmt(Id(j), Id(col)), For(Id(i), BinaryOp(or, BinaryOp(<, Id(i), NumLit(0.0)), BinaryOp(<, Id(j), NumLit(0.0))), UnaryOp(-, NumLit(1.0)), Block([If((ArrayCell(Id(board), [Id(i), Id(j)]), Return(BooleanLit(False))), [], None), AssignStmt(Id(j), BinaryOp(-, Id(j), NumLit(1.0)))])), AssignStmt(Id(i), Id(row)), AssignStmt(Id(j), Id(col)), For(Id(i), BinaryOp(or, BinaryOp(>=, Id(i), Id(n)), BinaryOp(<, Id(j), NumLit(0.0))), NumLit(1.0), Block([If((ArrayCell(Id(board), [Id(i), Id(j)]), Return(BooleanLit(False))), [], None), AssignStmt(Id(j), BinaryOp(-, Id(j), NumLit(1.0)))])), Return(BooleanLit(True))])), FuncDecl(Id(solverec), [VarDecl(Id(board), ArrayType([100.0, 100.0], NumberType), None, None), VarDecl(Id(col), NumberType, None, None), VarDecl(Id(n), NumberType, None, None)], Block([If((BinaryOp(>=, Id(col), Id(n)), Return(BooleanLit(True))), [], None), VarDecl(Id(i), None, var, NumLit(0.0)), For(Id(i), BinaryOp(>=, Id(i), Id(n)), NumLit(1.0), Block([If((CallExpr(Id(isSafe), [Id(board), Id(n), Id(i), Id(col)]), Block([AssignStmt(ArrayCell(Id(board), [Id(i), Id(col)]), NumLit(1.0)), If((CallExpr(Id(solverec), [Id(board), BinaryOp(+, Id(col), NumLit(1.0)), Id(n)]), Return(BooleanLit(True))), [], None), AssignStmt(ArrayCell(Id(board), [Id(i), Id(col)]), NumLit(0.0))])), [], None)])), Return(BooleanLit(False))])), FuncDecl(Id(solve), [VarDecl(Id(n), NumberType, None, None)], Block([VarDecl(Id(board), ArrayType([100.0, 100.0], NumberType), None, None), VarDecl(Id(i), None, var, NumLit(0.0)), VarDecl(Id(j), None, var, NumLit(0.0)), For(Id(i), BinaryOp(>=, Id(i), Id(n)), NumLit(1.0), For(Id(j), BinaryOp(>=, Id(j), Id(n)), NumLit(1.0), AssignStmt(ArrayCell(Id(board), [Id(i), Id(j)]), NumLit(0.0)))), If((UnaryOp(not, CallExpr(Id(solverec), [Id(board), NumLit(0.0), Id(n)])), CallStmt(Id(writeString), [StringLit(No solution)])), [], CallStmt(Id(printSolution), [Id(board), Id(n)]))]))])