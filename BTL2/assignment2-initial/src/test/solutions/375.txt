Program([FuncDecl(Id(round), [VarDecl(Id(n), NumberType, None, None)], None), FuncDecl(Id(dec_to_bin), [VarDecl(Id(n), NumberType, None, None)], Block([If((BinaryOp(<, Id(n), NumLit(0.0)), Return(StringLit(not implemented))), [], None), If((BinaryOp(=, Id(n), NumLit(0.0)), Return(StringLit(0))), [], None), VarDecl(Id(res), None, var, StringLit()), VarDecl(Id(i), None, var, NumLit(0.0)), For(Id(i), BinaryOp(<=, Id(n), NumLit(0.0)), NumLit(0.0), Block([If((BinaryOp(==, BinaryOp(%, Id(n), NumLit(2.0)), NumLit(0.0)), AssignStmt(Id(res), BinaryOp(..., StringLit(0), Id(res)))), [], AssignStmt(Id(res), BinaryOp(..., StringLit(1), Id(res)))), AssignStmt(Id(n), CallExpr(Id(round), [BinaryOp(/, Id(n), NumLit(2.0))]))])), Return(Id(res))])), FuncDecl(Id(round), [VarDecl(Id(n), NumberType, None, None)], Return(BinaryOp(-, Id(n), BinaryOp(%, Id(n), NumLit(1.0))))), FuncDecl(Id(main), [], Block([CallStmt(Id(writeNumber), [CallExpr(Id(dec_to_bin), [NumLit(10.0)])]), CallStmt(Id(writeNumber), [CallExpr(Id(dec_to_bin), [NumLit(100.0)])]), CallStmt(Id(writeNumber), [CallExpr(Id(dec_to_bin), [NumLit(1000.0)])])]))])